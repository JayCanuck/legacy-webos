Name: Advanced Options in Launcher
Version: 2.0.1-1
Author: Jason Robitaille
Description: Adds additional options to the launcher's menu: turn on/off DevMode, rescan applications, and run the js garbage collector  (MIT license)

--- .orig/usr/lib/luna/system/luna-applauncher/app/controllers/launcherhelper-assistant.js
+++ /usr/lib/luna/system/luna-applauncher/app/controllers/launcherhelper-assistant.js
@@ -34,4 +34,9 @@
             { label: $L('Default Applications'), command: 'defaultapps'},
+            { label:'Advanced Options', items: [
+            	{label:"Toggle DevMode", command:'devmode'},
+		{label:"Rescan Applications", command:'rescanapps'},
+		{label:"Run Garbage Collector", command:'gc'}
+            ]},
             Mojo.Menu.helpItem      
 		]
     };
@@ -36,6 +41,24 @@
 		]
     };
 	this.controller.setupWidget(Mojo.Menu.appMenu, {omitDefaultItems:true}, this.appMenuModel);
+	this.inDevMode = false;
+	this.controller.serviceRequest('palm://com.palm.connectionmanager', {
+		method: 'getnovacommode',
+		parameters: {},
+		onSuccess: function(response){
+			this.inDevMode = response.isEnabled;
+			for(var i=0; i<this.appMenuModel.items.length; i++) {
+				if(this.appMenuModel.items[i].label=="") {
+					if(this.inDevMode) {
+						this.appMenuModel.items[i].items[0].label = "Disable DevMode";
+					} else {
+						this.appMenuModel.items[i].items[0].label = "Enable DevMode";
+					}
+				}
+			}
+			this.controller.modelChanged(this.appMenuModel);
+		}.bind(this)
+	});
 	
 	this.setupTextWidget(false);
 	
@@ -128,6 +151,46 @@
 LauncherhelperAssistant.prototype.handleCommand = function(event){
 	if (event.type == Mojo.Event.command) {
 		switch (event.command) {
+			case 'devmode':
+				this.controller.serviceRequest('palm://com.palm.connectionmanager', {
+					method: 'getnovacommode',
+					parameters: {},
+					onSuccess: function(response){
+						this.inDevMode = response.isEnabled;
+						this.controller.serviceRequest('palm://com.palm.connectionmanager', {
+							method: 'setnovacommode',
+							parameters: {
+								isEnabled:!this.inDevMode
+							},
+							onSuccess: function(response) {
+								this.inDevMode = !this.inDevMode;
+								for(var i=0; i<this.appMenuModel.items.length; i++) {
+									if(this.appMenuModel.items[i].label=="") {
+										if(this.inDevMode) {
+											this.appMenuModel.items[i].items[0].label = "Disable DevMode";
+										} else {
+											this.appMenuModel.items[i].items[0].label = "Enable DevMode";
+										}
+									}
+								}
+								this.controller.modelChanged(this.appMenuModel);
+							}.bind(this)
+						});
+					}.bind(this)
+				});
+				break;
+			case 'rescanapps':
+				this.controller.serviceRequest('com.palm.applicationManager', {
+					method: 'rescan',
+					parameters: {}
+				});
+				break;
+			case 'gc':
+				this.controller.serviceRequest('palm://com.palm.lunastats',{
+					method: 'gc', //javascript garbage collect
+					parameters: {}
+				});
+				break;
 			case Mojo.Menu.helpCmd: 
 				 SystemManagerService.otherLauncherMenu();                                                                  
                  ApplicationService.launch(this.helpInfo.id, this.helpInfo.params);
