Name: Really Silent Ringer Switch Mute
Version: 2.0.1-1
Author: Jason Robitaille
Description: Flicking the ringer switch to off will mute every aspect of the webOS, music and games included. Will not mute alarms nor the phone speaker (though will mute ringtone). If a wired or wireless headset/headphones are connected, mute will be cancelled.  (MIT license)

--- .orig/usr/lib/luna/system/luna-systemui/app/controllers/bar-assistant.js
+++ /usr/lib/luna/system/luna-systemui/app/controllers/bar-assistant.js
@@ -60,7 +60,7 @@
 			this.initOnServerStart("com.palm.wifi", this.wifiInit.bind(this), this.wifiDeInit.bind(this));
 		
 		// Initialize and Subscribe for audio Status Notification
-		//this.initOnServerStart("com.palm.audio", this.audioInit.bind(this));
+		this.initOnServerStart("com.palm.audio", this.muteControl.bind(this));
 				
 		// Initialize and Subscribe for Update Notification
 		this.initOnServerStart("com.palm.update", this.updateInit.bind(this));
@@ -3105,6 +3105,56 @@
 		onSuccess: this.handleVoiceDialingAudioNotifications.bind(this)});
 },
 
+muteControl: function() {
+	this.controller.serviceRequest('palm://com.palm.audio/media', {
+		method:'status',
+		parameters: {"subscribe":true},
+		onSuccess: function(response) {
+			this.setMutedSystem(!response['ringer switch']);
+			this.setMutedRingtone(!response['ringer switch']);
+			this.setMutedMedia(!response['ringer switch']
+					&& (response.scenario=="media_back_speaker"), response.volume);
+		}.bind(this)
+	});
+},
+
+setMutedSystem: function(mute) {
+	this.controller.serviceRequest('palm://com.palm.audio/system', {
+		method:'setMuted',
+		parameters:{muted:mute}
+	});
+},
+
+setMutedRingtone: function(mute) {
+	this.controller.serviceRequest('palm://com.palm.audio/ringtone', {
+		method:'setMuted',
+		parameters:{muted:mute}
+	});
+},
+
+setMutedMedia: function(mute, volume) {
+	if(this.unmutedVal==undefined && !mute) {
+		var cookie = new Mojo.Model.Cookie("unmuted").get() || {volume:volume, muted:false};
+		this.unmutedVal = cookie.volume;
+		this.mutedStatus = cookie.muted;
+	}
+	if(mute!=this.mutedStatus) {
+		var newVolume = this.unmutedVal;
+		if(mute) {
+			this.unmutedVal = volume;
+			newVolume = 0;
+		}
+		this.mutedStatus = mute;
+		var newVolume =
+		this.controller.serviceRequest('palm://com.palm.audio/media', {
+			method:'setVolume',
+			parameters:{volume:newVolume}
+		});
+		var cookie2 = new Mojo.Model.Cookie("unmuted");
+		cookie2.put({volume:this.unmutedVal, muted:this.mutedStatus});
+	}
+},
+
 handlePhoneAudioNotifications: function(payload) {
 	
 	if(!payload)
