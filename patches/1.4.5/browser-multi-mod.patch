Name: Browser Multi-Mod
Version: 1.4.5-2
Author: fritos1406, daventx, Mark Klein, drnull, mamouton, Jason Robitaille
Description: This will give the option to download or stream streamable files. Also enables the display of the URL bar in landscape mode. Finally, it adds hotkeys for in-page navigation and adjusts them for right orientation.

--- .orig/usr/palm/applications/com.palm.app.browser/app/controllers/chrome.js
+++ /usr/palm/applications/com.palm.app.browser/app/controllers/chrome.js
@@ -102,12 +102,39 @@ Chrome.prototype._hidePortrait = function() {
 	}
 };
 
+Chrome.prototype.show = UrlBar.prototype._showNoOp;
+Chrome.prototype.hide = UrlBar.prototype._hideNoOp;
+
 Chrome.prototype._showNoOp = function() {
 	// DO NOTHING - We don't show anything in landscape.	
+	var animator;
+	var element = this.controller.get(this._elementName);
+	
+	// If we are visible then the current spacer height is 
+	if (element && (this._currentHeight === 0)) {
+		animator = Mojo.Animation.animateStyle(element, 'height', 'linear', {
+			from: 0,
+			to: this._maxHeight,
+			duration: 0.15,
+			reverse: false
+		});
+		this._currentHeight = this._maxHeight;
+	}
 };
 
 Chrome.prototype._hideNoOp = function() {
 	// DO NOTHING - We should not be displayed in landscape.
+	var animator;
+	var element = this.controller.get(this._elementName);
+	if (element && (this._currentHeight > 0)) {
+		animator = Mojo.Animation.animateStyle(element, 'height', 'linear', {
+			from: 0,
+			to: this._maxHeight,
+			duration: 0.15,
+			reverse: true
+		});
+		this._currentHeight = 0;
+	}
 };
 
 Chrome.prototype.isVisible = function() {
--- .orig/usr/palm/applications/com.palm.app.browser/app/controllers/page-assistant.js
+++ /usr/palm/applications/com.palm.app.browser/app/controllers/page-assistant.js
@@ -627,6 +627,7 @@
 				{label: $L('Open In New Card'), command:'openNew'},
 				{label: $L('Share Link'), command:'shareUrl'},
 				{label: $L('Copy URL'), command:'copyUrl'},
+				{label: $L('Download URL'), command:'downloadUrl'},
 				{label: $L('Copy to Photos'), command:'copyToPhotos'},
 				{label: $L('Share Image'), command:'shareImage'},
 				{label: $L('Set Wallpaper'), command:'setWallpaper'}
@@ -678,6 +679,9 @@
 					case 'copyUrl':
 						this.controller.stageController.setClipboard(urlInfo.url);
 						break;
+					case 'downloadUrl':
+						this._downloadResource(urlInfo.url);
+						break;
 					case 'copyToPhotos':
 						this._webView.mojo.saveImageAtPoint(tapPt.left, tapPt.top, "/media/internal", saveImageCallback);
 						break;
@@ -698,6 +702,7 @@
 					usedItems.push( findItem('openNew') );
 					usedItems.push( findItem('shareUrl') );
 					usedItems.push( findItem('copyUrl') );
+					usedItems.push( findItem('downloadUrl') );
 				}
 
 				if (response.src) {
@@ -1213,6 +1218,33 @@
  * @param {String} mimeType uri mime type.
  */
 PageAssistant.prototype._streamResource = function(uri, appid, mimeType){
+	if(appid === 'com.palm.app.email' || appid === 'com.palm.app.docviewer'
+			|| appid === 'com.palm.app.pdfviewer' || appid === 'com.palm.app.maps'
+			|| appid === 'com.palm.app.phone' || appid === 'com.palm.app.youtube'
+			|| appid === 'com.palm.app.findapps' || uri.startsWith("view-source://")) {
+		var params = {target: uri, mimeType: mimeType};
+		this.controller.serviceRequest('palm://com.palm.applicationManager',{
+			method: 'open',
+			parameters: {
+				'id': appid,
+				'params': params
+			}}
+		);
+		return;
+	}
+	this.controller.showAlertDialog({
+		title: "",
+		message: "This file type has been registered as a streaming media file. "
+				+ "Would you like to download it to /media/internal/downloads "
+				+ "instead?",
+		choices:[
+			{label:"Stream", value:"stream", type:'secondary'},  
+			{label:"Download", value:"download", type:'secondary'} 
+		],
+		onChoose: function(value) {
+			if(value=="download") {
+				this._downloadResource(uri);
+			} else {
 
 	// Only a few select applications can be
 	var crossAppScene = {
@@ -1234,6 +1266,9 @@
 			}
 		});
 	}
+			}
+		}.bind(this)
+	});
 };
 
 /**
@@ -2304,6 +2339,8 @@
 		// allowed to trigger the bar.
 		if (this._addressBar.isAGotoAddressBarEvent(event.originalEvent)) {
 			this._gotoUrlBar();
+		} else {
+			this.kbNav(event.originalEvent.keyCode);
 		}
 	}
 };
@@ -2308,6 +2345,58 @@
 	}
 };
 
+PageAssistant.prototype.kbNav = function(key) {
+	var scroller = this.controller.getSceneScroller();
+	var pageHeight = scroller.mojo.scrollerSize().height;
+	if (pageHeight > 50) pageHeight = pageHeight - 50;
+	
+	if (key == Mojo.Char.spaceBar) {
+		if (this._orientation === 'right') { // pgup
+			scroller.mojo.adjustBy(0, pageHeight);
+			this.moved();
+		} else { // pgdown
+			scroller.mojo.adjustBy(0, -1*pageHeight);
+			this._addressBar.hide();
+			this.moved();
+		}
+	} else if (key == Mojo.Char.zero) {
+		if (this._orientation === 'right') { // line up
+			scroller.mojo.adjustBy(0, +25);
+			this.moved();
+		} else { // line down
+			scroller.mojo.adjustBy(0, -25);
+			this._addressBar.hide();
+			this.moved();
+		}
+	} else if (key == Mojo.Char.period) {
+		if (this._orientation === 'right') { // pgdown
+			scroller.mojo.adjustBy(0, -1*pageHeight);
+			this._addressBar.hide();
+			this.moved();
+		} else { // pgup
+			scroller.mojo.adjustBy(0, pageHeight);
+			this.moved();
+		}
+	} else if (key == Mojo.Char.sym) {
+		if (this._orientation === 'right') { // line down
+			scroller.mojo.adjustBy(0, -25);
+			this._addressBar.hide();
+			this.moved();
+		} else { // line up
+			scroller.mojo.adjustBy(0, +25);
+			this.moved();
+		}
+	} else if (key == Mojo.Char.backspace) { // go to top
+		scroller.mojo.revealTop(0);
+		this._addressBar.show();
+	} else if (key == Mojo.Char.enter) { // go to bottom
+		scroller.mojo.revealBottom(0);
+		this._addressBar.hide();
+	} else {
+		Mojo.Log.error("Ignoring keyCode", key);
+	}	
+};
+
 /**
  * keyup events are now ignored. 
  * @param {Object} event
--- .orig/usr/palm/applications/com.palm.app.browser/app/controllers/urlbar.js
+++ /usr/palm/applications/com.palm.app.browser/app/controllers/urlbar.js
@@ -36,7 +36,7 @@
 	}
 };
 
-UrlBar.prototype.validGotoUrlBarChars = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$-_.+!*'(),{}|\\^~[]`<>#%\";/?:@&=";
+UrlBar.prototype.validGotoUrlBarChars = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$-_+!*'(),{}|\\^~[]`<>#%\";/?:&=";
 
 UrlBar.prototype.isAGotoUrlBarKey = function(keycode) {
 
@@ -42,7 +42,7 @@
 
 	// Use the frameworks new API to determine if we have a keycode that is a 
 	// candidate for the start of either a URL or a search string.
-	return Mojo.Char.isPrintableChar(keycode, false);
+	return Mojo.Char.isPrintableChar(keycode, false) && (keycode!=48) && (keycode!=190);
 };
 
 UrlBar.prototype.setOrientation = function(orientation) {
@@ -50,6 +50,10 @@
 	if (orientation !== 'up') {
 		// In landscape and down we ALWAYS hide the BAR so we make sure it's
 		// already hidden by calling' 'hide'.
+		this.show = this._showNoOp;
+		this.hide = this._hideNoOp;
+	} else {
+		// Default is portrait.
 		this._hidePortrait();
 	}
 
@@ -76,6 +80,12 @@
 	this._onPropertyChange = properties.onPropertyChange || function(){};
 	this._configOrientation(properties.orientation || 'up');
 
+	if(properties.orientation === 'up') {                               
+		this.owidth = 271;                                                
+	} else {                                                             
+		this.owidth = 430;                                                
+        }
+
 	this.models = {
 		urlInput: {
 			template: 'page/url-field',
@@ -93,7 +103,7 @@
 				url: ''
 			},
 
-			width: 271
+			width: this.owidth
 		},
 
 		// Beware: These are shallow copies.
@@ -361,4 +371,7 @@
 	this.controller.setMenuVisible(Mojo.Menu.viewMenu, false);
 };
 
+UrlBar.prototype.show = UrlBar.prototype._showNoOp;
+UrlBar.prototype.hide = UrlBar.prototype._hideNoOp;
+
 UrlBar.prototype._showNoOp = function() {
@@ -362,7 +375,10 @@
 };
 
 UrlBar.prototype._showNoOp = function() {
-	// DO NOTHING - We don't show anything in landscape.
+	var menuAssistant = this.controller._menu.assistant;
+	var spacerHeight = menuAssistant.viewSpacerHeight;	
+	menuAssistant.viewSpacerHeight = 0;
+	this.controller.setMenuVisible(Mojo.Menu.viewMenu, true);
 };
 
 UrlBar.prototype._hideNoOp = function() {
@@ -366,7 +382,10 @@
 };
 
 UrlBar.prototype._hideNoOp = function() {
-	// DO NOTHING - We should not be displayed in landscape.
+	var menuAssistant = this.controller._menu.assistant;
+	var spacerHeight = menuAssistant.viewSpacerHeight;
+	menuAssistant.viewSpacerHeight = 0;
+	this.controller.setMenuVisible(Mojo.Menu.viewMenu, false);
 };
 
 UrlBar.prototype.isVisible = function() {
--- .orig/usr/palm/applications/com.palm.app.browser/stylesheets/browser.css
+++ /usr/palm/applications/com.palm.app.browser/stylesheets/browser.css
@@ -736,7 +736,7 @@ div#historyScroller {
 }
 
 .search-results-container .palm-list {
-	width: 304px;
+	width: 95%;
 }
 
 .search-results-container .search.first {
