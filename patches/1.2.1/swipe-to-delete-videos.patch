Name: Swipe to Delete Videos
Version: 1.2.1-1
Author: Jason Robitaille
Description: Adds the ability to swipe to delete videos  (MIT license)

--- .orig/usr/palm/applications/com.palm.app.videoplayer.launcher/app/controllers/browser-assistant.js
+++ /usr/palm/applications/com.palm.app.videoplayer.launcher/app/controllers/browser-assistant.js
@@ -15,6 +15,8 @@
 			itemTemplate: 'browser/browser-entry',
 			filterFunction: this.requestVideosList.bind(this),
 			optimizedOptIn: true,
+			swipeToDelete: true,
+			autoconfirmDelete: true,
 			formatters: {
 				videoPictureUrl: this.videoPictureUrlFormatter,
 				videoSize: this.videoSizeFormatter.bind(this),
@@ -42,6 +44,33 @@
 		this.controller.document.addEventListener(Mojo.Event.activate, this.boundFocusHandle.bind(this));
 	},
 	
+	handleDelete: function(event){
+		event.stop(event);
+		this.deletePath = event.item.videoPath;
+		this.controller.showAlertDialog({
+			onChoose: function(value) {
+				if (value == 'Yes') {
+					this.controller.serviceRequest('palm://com.palm.mediadb/', {
+						method: 'deletefile',
+						parameters: {
+							path: this.deletePath
+						},
+						onSuccess: function() {
+							this.controller.showBanner("Video deleted!", "");
+						}.bind(this)
+					});
+				}
+			},
+			title: $L("Delete?"),
+			message: $L("Are you sure you want to delete \"" + event.item.videoNameFormatted + "\"?" + " This cannot be undone."),
+			choices:[
+				{label:$L('Yes'), value:"Yes", type:'affirmative'},  
+				{label:$L('No'), value:"No", type:'negative'} 
+			]
+		});
+		
+	},
+	
 	cleanup: function(){
 		this.controller.document.removeEventListener(Mojo.Event.deactivate, this.boundBlurHandle.bind(this));
 		this.controller.document.removeEventListener(Mojo.Event.activate, this.boundFocusHandle.bind(this));
@@ -56,6 +85,8 @@
 	},
 	
 	activate: function(){
+		this.handleDelete = this.handleDelete.bindAsEventListener(this);
+		this.controller.listen('videoslist', Mojo.Event.listDelete, this.handleDelete);
 		Util.markForeground(true);
 	},
 	
@@ -60,6 +91,7 @@
 	},
 	
 	deactivate: function(){
+		this.controller.stopListening('videoslist', Mojo.Event.listDelete, this.handleDelete);
 		Util.markForeground(false);
 	},
 	
--- .orig/usr/palm/applications/com.palm.app.videoplayer/app/controllers/browser-assistant.js
+++ /usr/palm/applications/com.palm.app.videoplayer/app/controllers/browser-assistant.js
@@ -15,6 +15,8 @@
 			itemTemplate: 'browser/browser-entry',
 			filterFunction: this.requestVideosList.bind(this),
 			optimizedOptIn: true,
+			swipeToDelete: true,
+			autoconfirmDelete: true,
 			formatters: {
 				videoPictureUrl: this.videoPictureUrlFormatter,
 				videoSize: this.videoSizeFormatter.bind(this),
@@ -42,6 +44,33 @@
 		this.controller.document.addEventListener(Mojo.Event.activate, this.boundFocusHandle.bind(this));
 	},
 	
+	handleDelete: function(event){
+		event.stop(event);
+		this.deletePath = event.item.videoPath;
+		this.controller.showAlertDialog({
+			onChoose: function(value) {
+				if (value == 'Yes') {
+					this.controller.serviceRequest('palm://com.palm.mediadb/', {
+						method: 'deletefile',
+						parameters: {
+							path: this.deletePath
+						},
+						onSuccess: function() {
+							this.controller.showBanner("Video deleted!", "");
+						}.bind(this)
+					});
+				}
+			},
+			title: $L("Delete?"),
+			message: $L("Are you sure you want to delete \"" + event.item.videoNameFormatted + "\"?" + " This cannot be undone."),
+			choices:[
+				{label:$L('Yes'), value:"Yes", type:'affirmative'},  
+				{label:$L('No'), value:"No", type:'negative'} 
+			]
+		});
+		
+	},
+	
 	cleanup: function(){
 		this.controller.document.removeEventListener(Mojo.Event.deactivate, this.boundBlurHandle.bind(this));
 		this.controller.document.removeEventListener(Mojo.Event.activate, this.boundFocusHandle.bind(this));
@@ -56,6 +85,8 @@
 	},
 	
 	activate: function(){
+		this.handleDelete = this.handleDelete.bindAsEventListener(this);
+		this.controller.listen('videoslist', Mojo.Event.listDelete, this.handleDelete);
 		Util.markForeground(true);
 	},
 	
@@ -60,6 +91,7 @@
 	},
 	
 	deactivate: function(){
+		this.controller.stopListening('videoslist', Mojo.Event.listDelete, this.handleDelete);
 		Util.markForeground(false);
 	},
 	