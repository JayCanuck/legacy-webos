Name: Dual Brightness in Device Menu
Version: 1.2.1-2
Author: Jason Robitaille
Description: Adds 2 brightness sliders in the device menu, one for the display, one for the keyboard  (MIT license)

--- .orig/usr/lib/luna/system/luna-systemui/app/controllers/devicemenu-assistant.js
+++ /usr/lib/luna/system/luna-systemui/app/controllers/devicemenu-assistant.js
@@ -32,6 +32,14 @@
 		var msg = $L("Battery: #{batlevel}");
 		this.controller.get('dm_battery').innerHTML = new Template(msg).evaluate({"batlevel": Mojo.Format.formatPercent(this.barAssistant.getBatteryLevel())});
 						
+		this.displayVal = 50;
+		this.kbVal = 50;
+		this.sliderClosed = true;
+		this.loadCookies(); if(this.sliderClosed) { this.controller.get("kbRow").style.display="none"; }
+		this.controller.setupWidget('brightSlider', {minValue: 1, maxValue: 100}, this.brightModel = {value: this.displayVal});
+		this.controller.setupWidget('kbSlider', {minValue: 1, maxValue: 100}, this.brightKBModel = {value: this.kbVal});
+		this.setBrightLabel();
+		this.sliderSubscription();
-		this.modesModel = {scrollbars: false, mode: "vertical"},
+		this.modesModel = {scrollbars: false, mode: "vertical"};
 		this.controller.setupWidget('devicescroller', {}, this.modesModel);
 		this.menuscroller = this.controller.get('devicescroller');
@@ -37,6 +45,7 @@
 		this.menuscroller = this.controller.get('devicescroller');
 		
 		this.drawerModel = {myOpenProperty:false};
+		this.controller.setupWidget('brightdetails', {modelProperty:'myOpenProperty'}, this.drawerModel);
 		this.controller.setupWidget('wifidetails', {modelProperty:'myOpenProperty'}, this.drawerModel);
 		this.controller.setupWidget('btdetails', {modelProperty:'myOpenProperty'}, this.drawerModel);
 		this.wifidrawer = this.controller.get('wifidetails');
@@ -113,6 +122,9 @@
 	},
 	
 	activate: function() {
+		this.controller.get('brightSlider').addEventListener(Mojo.Event.propertyChange, this.handleBrightSlider.bindAsEventListener(this));
+		this.controller.get('kbSlider').addEventListener(Mojo.Event.propertyChange, this.handleKBSlider.bindAsEventListener(this));
+		this.controller.get('brightRow').addEventListener(Mojo.Event.tap, this.handleBrightTap.bindAsEventListener(this));
 		this.controller.get('dm_airplanemode').addEventListener(Mojo.Event.tap, this.toggleAirplaneMode.bindAsEventListener(this));
 		this.controller.get('wifilist').addEventListener(Mojo.Event.listTap,this.handleWiFiTap.bindAsEventListener(this));
 		this.controller.get('btlist').addEventListener(Mojo.Event.listTap,this.handleBTTap.bindAsEventListener(this));		
@@ -126,6 +138,79 @@
 		//Close the App because this is a first launch.
 		this.toggleDeviceMenu();						
 	},	
+
+	loadCookies: function() {
+		var prefs = new Mojo.Model.Cookie("brightPrefs");
+		var prefData = prefs.get();
+		if(prefData) {
+			this.displayVal = prefData.display;
+			this.kbVal = prefData.kb;
+			this.sliderClosed = prefData.slider;
+		}
+	},
+
+	saveCookies: function() {
+		var prefs = new Mojo.Model.Cookie("brightPrefs");
+		prefs.put({display: this.displayVal, kb: this.kbVal, slider: this.sliderClosed});
+	},
+
+	handleBrightTap: function(event) {
+		this.controller.get('brightdetails').mojo.setOpenState(!this.controller.get('brightdetails').mojo.getOpenState());
+	},
+
+	handleBrightSlider: function(event) {
+		this.displayVal = Math.round(event.value)
+		this.controller.serviceRequest('palm://com.palm.power/backlight', {
+			method: 'set',
+			parameters:{display:{brightness:this.displayVal}}
+		});
+		this.setBrightLabel();
+	},
+
+	handleKBSlider: function(event) {
+		this.kbVal = Math.round(event.value)
+		this.controller.serviceRequest('palm://com.palm.power/backlight', {
+			method: 'set',
+			parameters:{keypad:{brightness:this.kbVal}}
+		});
+		this.setBrightLabel();
+	},
+
+	setBrightLabel: function() {
+		this.saveCookies();
+		if(this.sliderClosed) {
+			this.controller.get('dm_brightness').innerHTML = "Brightness: &nbsp;" + this.displayVal + "%";
+		} else {
+			this.controller.get('dm_brightness').innerHTML = "Brightness: &nbsp;" + this.displayVal + "% &nbsp;&nbsp;&nbsp;&nbsp;KB: " + this.kbVal + "%";
+
+		}
+	},
+
+	sliderSubscription: function() {
+		this.controller.serviceRequest('palm://com.palm.keys/switches', {
+			method: 'status',
+			parameters: {'subscribe': true},
+			onSuccess: function(response) {
+				if (response.key === "slider") {
+					if(response.state=='up') { //close slider
+						this.sliderClosed = true;
+						this.controller.get("kbRow").style.display="none";
+						this.controller.serviceRequest('palm://com.palm.power/backlight', {
+							method: 'set',
+							parameters:{display:{brightness:this.displayVal}, keypad:0}
+						});
+					} else { //open slider
+						this.sliderClosed = false;
+						this.controller.get("kbRow").style.display="inline";
+						this.controller.serviceRequest('palm://com.palm.power/backlight', {
+							method: 'set',
+							parameters:{display:{brightness:this.displayVal}, keypad:{brightness:this.kbVal}}
+						});
+					}
+				}
+			}.bind(this)
+		});
+	},
 		
 	cleanup: function() {
 		Mojo.Log.error("Device Menu - Clean up called");				
@@ -901,6 +986,7 @@
 			this.controller.hideWidgetContainer(this.controller.get('wifidetails'));
 			this.wifidrawer.mojo.setOpenState(false);
 		}		
+		this.controller.get('brightdetails').mojo.setOpenState(false);	
 		//this.isVisible = false;
 		if(this.isVisible){
 			this.toggleDeviceMenu();
--- .orig/usr/lib/luna/system/luna-systemui/app/views/devicemenu/devicemenu-scene.html
+++ /usr/lib/luna/system/luna-systemui/app/views/devicemenu/devicemenu-scene.html
@@ -23,8 +23,26 @@
 				
 				<div class="palm-row"><div class="palm-row-wrapper">
 					<div id="dm_battery" class="title dim"></div>
 				</div></div> 
 				
+				<div class="palm-section-divider">
+				</div>
+
+				<div class="palm-row" id="brightRow" x-mojo-tap-highlight='momentary'><div class="palm-row-wrapper">
+					<div id="dm_brightness" class="title"></div>
+				</div></div>
+
+				<div id="brightdetails" x-mojo-element="Drawer">
+					<div class="palm-row first"><div class="palm-row-wrapper">
+						<span x-mojo-loc='' style="font-size:0.85em" class="title">Display</span><br>
+						<div x-mojo-element="Slider" id="brightSlider" style="padding-top: 28px; height: 45px;"></div>
+					</div></div>
+					<div class="palm-row last" id="kbRow"><div class="palm-row-wrapper">
+						<span x-mojo-loc='' style="font-size:0.85em" class="title">Keyboard</span><br>
+						<div x-mojo-element="Slider" id="kbSlider" style="padding-top: 28px; height: 45px;"></div>
+					</div></div>
+				</div>
+
 				<div class="palm-section-divider">
 				</div>               
 				
