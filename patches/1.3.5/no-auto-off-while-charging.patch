Name: No Auto-Off While Charging
Version: 1.3.5-1
Author: Jason Robitaille
Description: Adds an option to the Screen & Lock app to enable or disable auto-off while charging  (MIT license)

--- .orig/usr/palm/applications/com.palm.app.screenlock/app/views/securityconfig/securityconfig-scene.html
+++ /usr/palm/applications/com.palm.app.screenlock/app/views/securityconfig/securityconfig-scene.html
@@ -19,7 +19,7 @@
 				</div>
 			</div>
 
-			<div id='screentimerrow' class="palm-row last">
+			<div id='screentimerrow' class="palm-row">
 				<div id='timeroptions' class="palm-row-wrapper">
 					<div id="screenOffTimer" x-mojo-element="ListSelector" class="right"></div>
 				</div>
@@ -24,6 +24,12 @@
 					<div id="screenOffTimer" x-mojo-element="ListSelector" class="right"></div>
 				</div>
 			</div>
+			<div class="palm-row last">
+				<div class="palm-row-wrapper">
+					<div x-mojo-element="ToggleButton" id="autoOffCharging"></div>
+					<div class="title capitalize" style="font-size:0.85em" x-mojo-loc=''>Auto-off while charging</div>
+				</div>
+			</div>
 		</div>
 	 </div>
 	 <div class="palm-group">
--- .orig/usr/palm/applications/com.palm.app.screenlock/app/controllers/securityconfig-assistant.js
+++ /usr/palm/applications/com.palm.app.screenlock/app/controllers/securityconfig-assistant.js
@@ -19,6 +19,10 @@
         enableProp: 'enabled',        
     },
     
+    autoOffChargingtoggleModel: {
+        value: false
+    },
+    
     switchApptoggleModel: {
         value: false,
     },
@@ -53,6 +57,9 @@
 		//this.controller.setupWidget('blinkAlerts', this.onOffToggleOpt, this.ledThrobberToggleModel);
 		//Mojo.Event.listen($('blinkAlerts'),'mojo-property-change', this.toggleLEDThrobber.bindAsEventListener(this));
 		
+		this.controller.setupWidget('autoOffCharging', this.onOffToggleOpt, this.autoOffChargingtoggleModel);
+		Mojo.Event.listen($('autoOffCharging'),'mojo-property-change', this.toggleautoOffCharging.bindAsEventListener(this));
+		
 		this.controller.setupWidget('switchApps', this.onOffToggleOpt, this.switchApptoggleModel);
 		Mojo.Event.listen($('switchApps'),'mojo-property-change', this.toggleSwitchApps.bindAsEventListener(this));
 		
@@ -236,6 +243,7 @@
 		
 		this.getSystemlockModeReq = SystemService.getSystemlockMode(this.handleSystemlockMode.bind(this));
 		this.getSystemlockTimeoutReq = SystemService.getSystemlockTimeout(this.handleSystemlockTimeout.bind(this));
+		this.getAutoOffCharging();
 	},
 	
 	updateUI: function(timeout,maximumBrightness) {
@@ -551,6 +559,33 @@
 		}
 	},
 	
+	toggleautoOffCharging: function(event) {
+		if(!event)
+			return;
+		this.setAutoOffCharging(event.value);
+	},
+	
+	setAutoOffCharging: function(value) {
+		this.controller.serviceRequest('palm://com.palm.display/control', {
+			method: 'setProperty',
+			parameters: {
+				onWhenConnected: !value
+			}
+		});	
+	},
+	
+	getAutoOffCharging: function() {
+		this.controller.serviceRequest('palm://com.palm.display/control', {
+			method: 'getProperty',
+			parameters: {
+				properties: ["onWhenConnected"]
+			},
+			onSuccess: function(payload) {
+				this.autoOffChargingtoggleModel.value = !payload.onWhenConnected;
+				this.controller.modelChanged(this.autoOffChargingtoggleModel);
+			}.bind(this)
+		});		
+	},
 	
 	
 	launchFilePicker: function(event) {
